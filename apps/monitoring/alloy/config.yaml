#
# Reference:
# https://grafana.com/docs/alloy/latest/reference/components/loki.source.podlogs/#usage
#

apiVersion: v1
kind: ConfigMap
metadata:
  name: alloy
  namespace: monitoring
  labels:
    app.kubernetes.io/component: config
    app.kubernetes.io/name: alloy
data:
  config.content: |
    // ========================================
    // Cert Manager
    // Controller
    discovery.kubernetes "cert_manager_controller" {
      role = "pod"

      namespaces {
        names = ["cert-manager"]
      }
      selectors {
        role = "pod"
        label = "app.kubernetes.io/component=controller"
      }
    }

    loki.source.kubernetes "cert_manager_controller" {
      targets = discovery.kubernetes.cert_manager_controller.targets
      forward_to = [loki.write.local.receiver]
    }

    // CaInjector
    discovery.kubernetes "cert_manager_cainjector" {
      role = "pod"

      namespaces {
        names = ["cert-manager"]
      }
      selectors {
        role = "pod"
        label = "app.kubernetes.io/component=cainjector"
      }
    }

    loki.source.kubernetes "cert_manager_cainjector" {
      targets = discovery.kubernetes.cert_manager_cainjector.targets
      forward_to = [loki.write.local.receiver]
    }

    // Webhook
    discovery.kubernetes "cert_manager_webhook" {
      role = "pod"

      namespaces {
        names = ["cert-manager"]
      }
      selectors {
        role = "pod"
        label = "app.kubernetes.io/component=webhook"
      }
    }

    loki.source.kubernetes "cert_manager_webhook" {
      targets = discovery.kubernetes.cert_manager_webhook.targets
      forward_to = [loki.write.local.receiver]
    }

    // ========================================
    // CrowdSec
    // Agent Service
    discovery.kubernetes "crowdsec_agent" {
      role = "pod"

      namespaces {
        names = ["crowdsec"]
      }
      selectors {
        role = "pod"
        label = "type=agent"
      }
    }

    loki.source.kubernetes "crowdsec_agent" {
      targets = discovery.kubernetes.crowdsec_agent.targets
      forward_to = [loki.write.local.receiver]
    }

    // LAPI Service
    discovery.kubernetes "crowdsec_lapi" {
      role = "pod"

      namespaces {
        names = ["crowdsec"]
      }
      selectors {
        role = "pod"
        label = "type=lapi"
      }
    }

    loki.source.kubernetes "crowdsec_lapi" {
      targets = discovery.kubernetes.crowdsec_lapi.targets
      forward_to = [loki.write.local.receiver]
    }

    // ========================================
    // Error Pages
    // Application
    discovery.kubernetes "error_pages" {
      role = "pod"

      namespaces {
        names = ["kube-system"]
      }
      selectors {
        role = "pod"
        label = "app.kubernetes.io/name=error-pages"
      }
    }

    loki.source.kubernetes "error_pages" {
      targets = discovery.kubernetes.error_pages.targets
      forward_to = [loki.write.local.receiver]
    }

    // ========================================
    // Flux System
    // Helm Controller
    discovery.kubernetes "flux_system_helm_controller" {
      role = "pod"

      namespaces {
        names = ["flux-system"]
      }
      selectors {
        role = "pod"
        label = "app=helm-controller"
      }
    }

    loki.source.kubernetes "flux_system_helm_controller" {
      targets = discovery.kubernetes.flux_system_helm_controller.targets
      forward_to = [loki.write.local.receiver]
    }

    // Kustomize Controller
    discovery.kubernetes "flux_system_kustomize_controller" {
      role = "pod"

      namespaces {
        names = ["flux-system"]
      }
      selectors {
        role = "pod"
        label = "app=kustomize-controller"
      }
    }

    loki.source.kubernetes "flux_system_kustomize_controller" {
      targets = discovery.kubernetes.flux_system_kustomize_controller.targets
      forward_to = [loki.write.local.receiver]
    }

    // Notification Controller
    discovery.kubernetes "flux_system_notification_controller" {
      role = "pod"

      namespaces {
        names = ["flux-system"]
      }
      selectors {
        role = "pod"
        label = "app=notification-controller"
      }
    }

    loki.source.kubernetes "flux_system_notification_controller" {
      targets = discovery.kubernetes.flux_system_notification_controller.targets
      forward_to = [loki.write.local.receiver]
    }

    // Sealed Secrets Controller
    discovery.kubernetes "flux_system_sealed_secrets_controller" {
      role = "pod"

      namespaces {
        names = ["flux-system"]
      }
      selectors {
        role = "pod"
        label = "app=sealed-secrets-controller"
      }
    }

    loki.source.kubernetes "flux_system_sealed_secrets_controller" {
      targets = discovery.kubernetes.flux_system_sealed_secrets_controller.targets
      forward_to = [loki.write.local.receiver]
    }

    // Source Controller
    discovery.kubernetes "flux_system_source_controller" {
      role = "pod"

      namespaces {
        names = ["flux-system"]
      }
      selectors {
        role = "pod"
        label = "app=source-controller"
      }
    }

    loki.source.kubernetes "flux_system_source_controller" {
      targets = discovery.kubernetes.flux_system_source_controller.targets
      forward_to = [loki.write.local.receiver]
    }

    // ========================================
    // Home Assistant
    // Application
    discovery.kubernetes "homeassistant_app" {
      role = "pod"

      namespaces {
        names = ["homeassistant"]
      }
      selectors {
        role = "pod"
        label = "app.kubernetes.io/component=app"
      }
    }

    loki.source.kubernetes "homeassistant_app" {
      targets = discovery.kubernetes.homeassistant_app.targets
      forward_to = [loki.write.local.receiver]
    }

    // Database
    discovery.kubernetes "homeassistant_db" {
      role = "pod"

      namespaces {
        names = ["homeassistant"]
      }
      selectors {
        role = "pod"
        label = "app.kubernetes.io/component=database"
      }
    }

    loki.source.kubernetes "homeassistant_db" {
      targets = discovery.kubernetes.homeassistant_db.targets
      forward_to = [loki.write.local.receiver]
    }

    // ========================================
    // KeyCloak
    // Application
    discovery.kubernetes "keycloak_app" {
      role = "pod"

      namespaces {
        names = ["keycloak"]
      }
      selectors {
        role = "pod"
        label = "app.kubernetes.io/component=app"
      }
    }

    loki.source.kubernetes "keycloak_app" {
      targets = discovery.kubernetes.keycloak_app.targets
      forward_to = [loki.write.local.receiver]
    }

    // Database
    discovery.kubernetes "keycloak_db" {
      role = "pod"

      namespaces {
        names = ["keycloak"]
      }
      selectors {
        role = "pod"
        label = "app.kubernetes.io/component=database"
      }
    }

    loki.source.kubernetes "keycloak_db" {
      targets = discovery.kubernetes.keycloak_db.targets
      forward_to = [loki.write.local.receiver]
    }

    // ========================================
    // NextCloud
    // Application
    discovery.kubernetes "nextcloud_app" {
      role = "pod"

      namespaces {
        names = ["nextcloud"]
      }
      selectors {
        role = "pod"
        label = "app.kubernetes.io/component=app"
      }
    }

    loki.source.kubernetes "nextcloud_app" {
      targets = discovery.kubernetes.nextcloud_app.targets
      forward_to = [loki.write.local.receiver]
    }

    // Exporter
    // Need to implement

    // Cron
    discovery.kubernetes "nextcloud_cron" {
      role = "pod"

      namespaces {
        names = ["nextcloud"]
      }
      selectors {
        role = "pod"
        label = "app.kubernetes.io/component=cron"
      }
    }

    loki.source.kubernetes "nextcloud_cron" {
      targets = discovery.kubernetes.nextcloud_cron.targets
      forward_to = [loki.write.local.receiver]
    }

    // Redis
    discovery.kubernetes "nextcloud_redis" {
      role = "pod"

      namespaces {
        names = ["nextcloud"]
      }
      selectors {
        role = "pod"
        label = "app.kubernetes.io/component=redis"
      }
    }

    loki.source.kubernetes "nextcloud_redis" {
      targets = discovery.kubernetes.nextcloud_redis.targets
      forward_to = [loki.write.local.receiver]
    }

    // Database
    discovery.kubernetes "nextcloud_db" {
      role = "pod"

      namespaces {
        names = ["nextcloud"]
      }
      selectors {
        role = "pod"
        label = "app.kubernetes.io/component=database"
      }
    }

    loki.source.kubernetes "nextcloud_db" {
      targets = discovery.kubernetes.nextcloud_db.targets
      forward_to = [loki.write.local.receiver]
    }

    // ========================================
    // Nvidia Device Plugin
    discovery.kubernetes "nvidia_device_plugin" {
      role = "pod"

      namespaces {
        names = ["kube-system"]
      }
      selectors {
        role = "pod"
        label = "app.kubernetes.io/instance=nvidia-device-plugin"
      }
    }

    loki.source.kubernetes "nvidia_device_plugin" {
      targets = discovery.kubernetes.nvidia_device_plugin.targets
      forward_to = [loki.write.local.receiver]
    }

    // ========================================
    // Pihole
    discovery.kubernetes "pihole" {
      role = "pod"

      namespaces {
        names = ["kube-system"]
      }
      selectors {
        role = "pod"
        label = "app=pihole"
      }
    }

    loki.source.kubernetes "pihole" {
      targets = discovery.kubernetes.pihole.targets
      forward_to = [loki.write.local.receiver]
    }

    // ========================================
    // Reflector
    discovery.kubernetes "reflector" {
      role = "pod"

      namespaces {
        names = ["reflector"]
      }
      selectors {
        role = "pod"
        label = "app.kubernetes.io/instance=reflector"
      }
    }

    loki.source.kubernetes "reflector" {
      targets = discovery.kubernetes.reflector.targets
      forward_to = [loki.write.local.receiver]
    }

    // ========================================
    // Reloader
    discovery.kubernetes "reloader" {
      role = "pod"

      namespaces {
        names = ["reloader"]
      }
      selectors {
        role = "pod"
        label = "app.kubernetes.io/component=app"
      }
    }

    loki.source.kubernetes "reloader" {
      targets = discovery.kubernetes.reloader.targets
      forward_to = [loki.write.local.receiver]
    }

    // ========================================
    // Traefik
    // Forward Auth
    discovery.kubernetes "traefik_forward_auth" {
      role = "pod"

      namespaces {
        names = ["kube-system"]
      }
      selectors {
        role = "pod"
        label = "app.kubernetes.io/name=traefik-forward-auth"
      }
    }

    loki.source.kubernetes "traefik_forward_auth" {
      targets = discovery.kubernetes.traefik_forward_auth.targets
      forward_to = [loki.write.local.receiver]
    }

    // Application
    discovery.kubernetes "traefik_app" {
      role = "pod"

      namespaces {
        names = ["kube-system"]
      }
      selectors {
        role = "pod"
        label = "app.kubernetes.io/name=traefik"
      }
    }

    loki.source.kubernetes "traefik_app" {
      targets = discovery.kubernetes.traefik_app.targets
      forward_to = [loki.write.local.receiver]
    }

    // ========================================
    // Wiki-JS
    // Application
    discovery.kubernetes "wiki_js_app" {
      role = "pod"

      namespaces {
        names = ["wiki"]
      }
      selectors {
        role = "pod"
        label = "app.kubernetes.io/component=app"
      }
    }

    loki.source.kubernetes "wiki_js_app" {
      targets = discovery.kubernetes.wiki_js_app.targets
      forward_to = [loki.write.local.receiver]
    }

    // Database
    discovery.kubernetes "wiki_js_db" {
      role = "pod"

      namespaces {
        names = ["wiki"]
      }
      selectors {
        role = "pod"
        label = "app.kubernetes.io/component=database"
      }
    }

    loki.source.kubernetes "wiki_js_db" {
      targets = discovery.kubernetes.wiki_js_db.targets
      forward_to = [loki.write.local.receiver]
    }

    // ========================================
    // Minecraft Server
    discovery.kubernetes "minecraft_server" {
      role = "pod"

      namespaces {
        names = ["minecraft"]
      }
      selectors {
        role = "pod"
        label = "app.kubernetes.io/instance=minecraft-server-minecraft"
      }
    }

    loki.source.kubernetes "minecraft_server" {
      targets = discovery.kubernetes.minecraft_server.targets
      forward_to = [loki.write.local.receiver]
    }

    // ========================================
    // Valheim Server
    discovery.kubernetes "valheim_server" {
      role = "pod"

      namespaces {
        names = ["valheim"]
      }
      selectors {
        role = "pod"
        label = "app.kubernetes.io/instance=valheim-server"
      }
    }

    loki.source.kubernetes "valheim_server" {
      targets = discovery.kubernetes.valheim_server.targets
      forward_to = [loki.write.local.receiver]
    }

    // ========================================
    // V-Rising Server
    discovery.kubernetes "v_rising_server" {
      role = "pod"

      namespaces {
        names = ["v-rising"]
      }
      selectors {
        role = "pod"
        label = "app.kubernetes.io/instance=v-rising-server"
      }
    }

    loki.source.kubernetes "v_rising_server" {
      targets = discovery.kubernetes.v_rising_server.targets
      forward_to = [loki.write.local.receiver]
    }

    // ========================================
    // Loki Write Source
    // ========================================
    loki.write "local" {
      endpoint {
        url = "http://loki.monitoring:3100/loki/api/v1/push"
      }
    }

    // ========================================
    // Configuration Blocks
    // ========================================
    logging {
      level = "info"
      format = "logfmt"
    }
