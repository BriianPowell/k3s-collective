#
# Reference:
# https://prometheus.io/docs/introduction/overview/
# https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-authentication/keycloak/
# https://www.opsramp.com/guides/prometheus-monitoring/prometheus-alerting/
# https://github.com/prometheus/prometheus/blob/main/documentation/examples/prometheus-kubernetes.yml
# https://grafana.com/blog/2022/03/21/how-relabeling-in-prometheus-works/
#

apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 24h
  url: https://grafana.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 1h0m0s
  chart:
    spec:
      chart: grafana
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: monitoring
      version: '>=6.55.0 <7.0.0'
  values:
    serviceMonitor:
      enabled: true
      path: /metrics
      labels:
        monitoring: prometheus-operator
      interval: 1m
      scheme: http
      tlsConfig: {}
      scrapeTimeout: 30s
      relabelings: []
      targetLabels: []
    resources:
        cpu: 250m
        memory: 500Mi
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
              - abaddon
    persistence:
      type: pvc
      enabled: true
      accessModes:
        - ReadWriteOnce
      size: 10G
      existingClaim: grafana-pvc
    admin:
      existingSecret: grafana-secrets
      userKey: USER
      passwordKey: PASS
    envFromSecrets:
      - name: grafana-secrets
        optional: false
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Prometheus
            type: prometheus
            url: http://kube-prometheus-collective-prometheus.monitoring.svc:9090
            access: proxy
            editable: true
            orgId: 1
            version: 1
            isDefault: true
          - name: Loki
            type: loki
            url: http://loki.monitoring.svc:3100
            access: proxy
            orgid: 1
            version: 1
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
        - name: 'logs'
          orgId: 1
          folder: 'Logs'
          type: file
          disableDeletion: false
          editable: true
          options:
            path:
              /var/lib/grafana/dashboards/logs
    dashboards: # https://github.com/grafana/helm-charts/blob/55564fcb13361e511d5eb33458bd5fb442eb1039/charts/grafana/values.yaml#L652
      logs:
        cert-manager:
          file: dashboards/logs/cert-manager.json
        home-assistant:
          file: dashboards/logs/home-assistant.json
        keycloak:
          file: dashboards/logs/keycloak.json
        nextcloud:
          file: dashboards/logs/nextcloud.json
        traefik:
          file: dashboards/logs/traefik.json
        wiki-js:
          file: dashboards/logs/wiki-js.json
    grafana.ini:
      paths:
        data: /var/lib/grafana/
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      analytics:
        check_for_updates: true
      log:
        mode: console
      grafana_net:
        url: https://grafana.net
      server:
        root_url: https://grafana.powell.place
      auth:
        disable_login_form: true
        disable_signout_menu: false
        auto_login: true
        # signout_redirect_url: https://keycloak.powell.place/realms/inferno/protocol/openid-connect/logout
      auth.generic_oauth:
        enabled: true
        name: Keycloak
        allow_sign_up: true
        client_id: $__env{CLIENT_ID}
        client_secret: $__env{CLIENT_SECRET}
        scopes: openid email profile offline_access roles
        email_attribute_path: email
        login_attribute_path: username
        name_attribute_path: full_name
        auth_url: $__env{AUTH_URL}
        token_url: $__env{TOKEN_URL}
        api_url: $__env{API_URL}
        role_attribute_path: contains(groups[*], 'grafana-admin') && 'Admin' || contains(groups[*], 'grafana-dev') && 'Editor' || 'Viewer'
      users:
        allow_org_create: true
        allow_sign_up: false
        auto_assign_org: true
        auto_assign_org_role: Admin
        default_theme: system
        login_hint: email or username
        verify_email_enabled: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: monitoring
  labels:
    app: grafana
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
