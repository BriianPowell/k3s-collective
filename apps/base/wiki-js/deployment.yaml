#
# Reference:
# https://github.com/requarks/wiki-docs
# https://github.com/Requarks/wiki/blob/main/dev/helm/values.yaml
#

apiVersion: v1
kind: Service
metadata:
  name: wiki-js
  namespace: wiki
  labels:
    app.kubernetes.io/component: service
    app.kubernetes.io/name: wiki-js
spec:
  selector:
    app.kubernetes.io/component: app
    app.kubernetes.io/name: wiki-js
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wiki-js
  namespace: wiki
  labels:
    app.kubernetes.io/component: app
    app.kubernetes.io/name: wiki-js
spec:
  pause: true
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: app
      app.kubernetes.io/name: wiki-js
  template:
    metadata:
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/name: wiki-js
    spec:
      serviceAccountName: wiki-js
      containers:
        - name: wiki-js
          image: requarks/wiki:latest
          imagePullPolicy: Always
          env:
            - name: DB_TYPE
              value: postgres
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: wiki-js-pgcluster-app
                  key: host
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: wiki-js-pgcluster-app
                  key: port
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: wiki-js
                  key: PG_DB
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: wiki-js
                  key: PG_USER
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: wiki-js
                  key: PG_PASS
            - name: HA_ACTIVE
              value: '1'
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          startupProbe:
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 60
            httpGet:
              path: /healthz
              port: http
          resources:
            requests:
              cpu: 10m
              memory: 150Mi
            limits:
              cpu: 2000m
              memory: 750Mi
