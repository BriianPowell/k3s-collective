---
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: prometheus-community
  namespace: monitoring
spec:
  interval: 24h
  url: https://prometheus-community.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus
  namespace: monitoring
spec:
  interval: 1h0m0s
  chart:
    spec:
      chart: kube-prometheus-stack
      version: '>=45.5.0'
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: monitoring
      interval: 12h
  values:
    nameOverride: collective
    namespaceOverride: monitoring
    alertmanager:
      enabled: false
    grafana:
      enabled: false
      # namespaceOverride: monitoring
      # defaultDashboardsTimezone: pst
      # sidecar:
      #   datasources:
      #     enabled: false
      # additionalDataSources:
      #   - name: prometheus
      #     type: prometheus
      #     access: proxy
      #     editable: false
      #     orgId: 1
      #     url: http://kube-prometheus-collective-prometheus.monitoring.svc:9090
      #     version: 1
      # extraConfigmapMounts:
      #   - name: grafana-config
      #     mountPath: /etc/grafana
      #     secret:
      #       secretName: grafana-config-secret
      #     readOnly: true
    kubeApiServer:
      enabled: true
    kubelet:
      enabled: true
    kubeControllerManager:
      enabled: true
      endpoints: ['10.0.0.10']
      service:
        enabled: true
        port: 10257
        targetPort: 10257
      serviceMonitor:
        enabled: true
        https: true
    coreDns:
      enabled: true
    kubeDns:
      enabled: false
    kubeEtcd:
      enabled: true
    kubeScheduler:
      enabled: true
      endpoints: ['10.0.0.10']
      service:
        enabled: true
        port: 10259
        targetPort: 10259
      serviceMonitor:
        enabled: true
        https: true
    kubeProxy:
      enabled: true
      endpoints: ['10.0.0.10']
      service:
        enabled: true
        port: 10249
        targetPort: 10249
    kube-state-metrics:
      namespaceOverride: kube-system
    prometheus-node-exporter:
      namespaceOverride: monitoring
    prometheusOperator:
      enabled: true
    Prometheus:
      enabled: true
